workflows:
  ionic-capacitor-ios-workflow:
    name: iOS Build
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: EPG LLC
    environment:
      vars:
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        APP_STORE_APP_ID: 6744694610
      node: 20.11.1
      xcode: latest
      cocoapods: default
      ios_signing:
        provisioning_profiles:
          - CM_PULSEPROFILE
        certificates:
          - CM_CERTIFICATE
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Clean npm dependencies
        script: |
          rm -rf node_modules package-lock.json
      - name: Install npm dependencies for Ionic project
        script: |
          npm install
      - name: Clean Pods cache
        script: |
          cd ios/App && rm -rf Pods && rm -f Podfile.lock
      - name: Cocoapods installation
        script: |
          cd ios/App && pod install --verbose
      - name: Compile web code to dist folder
        script: |
          npm run build
      - name: Update dependencies and copy web assets to native project
        script: |
          npx cap sync
      - name: Debug workspace file existence
        script: |
          echo "Checking for Xcode workspace file..."
          ls -l $XCODE_WORKSPACE || echo "Xcode workspace file not found"
      - name: Debug podspec file for CapacitorDevice
        script: |
          echo "Checking for CapacitorDevice podspec..."
          ls -l ../../node_modules/@capacitor/device/ios/CapacitorDevice.podspec || echo "CapacitorDevice podspec not found"
      - name: Debug provisioning profiles and certificates
        script: |
          echo "Listing provisioning profiles..."
          ls -l ~/Library/MobileDevice/Provisioning\ Profiles/ || echo "No profiles found"
          echo "Listing available certificates in keychain..."
          security find-identity -v -p codesigning
      - name: Debug provisioning profile details
        script: |
          echo "Checking provisioning profile details..."
          PROFILE_FILE=$(ls ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision)
          if [ -f "$PROFILE_FILE" ]; then
            UUID=$(security cms -D -i "$PROFILE_FILE" | grep -A 1 UUID | grep string | grep -o '<string>[^<]*</string>' | cut -d '>' -f 2 | cut -d '<' -f 1)
            if [ -n "$UUID" ]; then
              echo "Found UUID: $UUID"
            else
              echo "Failed to extract UUID from $PROFILE_FILE"
              exit 1
            fi
          else
            echo "No provisioning profile found in ~/Library/MobileDevice/Provisioning Profiles/"
            exit 1
          fi
      - name: Debug bundle ID in Xcode project
        script: |
          echo "Checking bundle ID in Xcode project..."
          xcodebuild -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" -showBuildSettings | grep PRODUCT_BUNDLE_IDENTIFIER
      - name: Show build settings
        script: |
          xcodebuild -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" -showBuildSettings
      - name: Increment build number
        script: |
          cd ios/App
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_STORE_APP_ID")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
      - name: Create export_options.plist for App Store distribution
        script: |
          cd ios/App
          cat <<EOF > export_options.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>P58Q6F64US</string>
            <key>bundleIdentifier</key>
            <string>com.epg.build</string>
          </dict>
          </plist>
          EOF
      - name: Build ipa for distribution
        script: |
          cd ios/App
          PROVISIONING_PROFILE_UUID="jci7ti54-1234-5678-9012-345678901234"  # Replace with the actual UUID
          echo "Using Provisioning Profile UUID: $PROVISIONING_PROFILE_UUID"
          xcodebuild -workspace App.xcworkspace \
            -scheme "$XCODE_SCHEME" \
            -archivePath "build/App.xcarchive" \
            -configuration Release \
            DEVELOPMENT_TEAM=P58Q6F64US \
            PROVISIONING_PROFILE="$PROVISIONING_PROFILE_UUID" \
            archive
          xcodebuild -exportArchive \
            -archivePath "build/App.xcarchive" \
            -exportPath "build/ipa" \
            -exportOptionsPlist "export_options.plist"
    artifacts:
      - ios/App/build/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - ognen@brand-boost.agency
        notify:
          success: false
          failure: false
      app_store_connect:
        auth: integration
        submit_to_testflight: false
        submit_to_app_store: false